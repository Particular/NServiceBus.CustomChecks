[assembly: System.Runtime.CompilerServices.InternalsVisibleTo(@"NServiceBus.CustomChecks.Tests, PublicKey=00240000048000009400000006020000002400005253413100040000010001007f16e21368ff041183fab592d9e8ed37e7be355e93323147a1d29983d6e591b04282e4da0c9e18bd901e112c0033925eb7d7872c2f1706655891c5c9d57297994f707d16ee9a8f40d978f064ee1ffc73c0db3f4712691b23bf596f75130f4ec978cf78757ec034625a5f27e6bb50c618931ea49f6f628fd74271c32959efb1c5")]
namespace NServiceBus.CustomChecks
{
    public class CheckResult
    {
        public static NServiceBus.CustomChecks.CheckResult Pass;
        public CheckResult() { }
        public string FailureReason { get; set; }
        public bool HasFailed { get; set; }
        public static NServiceBus.CustomChecks.CheckResult Failed(string reason) { }
        public static System.Threading.Tasks.Task<NServiceBus.CustomChecks.CheckResult> op_Implicit(NServiceBus.CustomChecks.CheckResult result) { }
    }
    public abstract class CustomCheck : NServiceBus.CustomChecks.ICustomCheck
    {
        protected CustomCheck(string id, string category, System.TimeSpan? repeatAfter = default) { }
        public string Category { get; }
        public string Id { get; }
        public System.TimeSpan? Interval { get; }
        public abstract System.Threading.Tasks.Task<NServiceBus.CustomChecks.CheckResult> PerformCheck(System.Threading.CancellationToken cancellationToken = default);
    }
    public interface ICustomCheck
    {
        string Category { get; }
        string Id { get; }
        System.TimeSpan? Interval { get; }
        System.Threading.Tasks.Task<NServiceBus.CustomChecks.CheckResult> PerformCheck(System.Threading.CancellationToken cancellationToken = default);
    }
}
namespace NServiceBus
{
    public static class CustomChecksConfigurationExtensions
    {
        public static void ReportCustomChecksTo(this NServiceBus.EndpointConfiguration config, string serviceControlQueue, System.TimeSpan? timeToLive = default) { }
    }
}