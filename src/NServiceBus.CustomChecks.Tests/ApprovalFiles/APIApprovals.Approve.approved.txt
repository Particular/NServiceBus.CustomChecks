[assembly: System.Runtime.CompilerServices.InternalsVisibleTo(@"NServiceBus.CustomChecks.Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100dde965e6172e019ac82c2639ffe494dd2e7dd16347c34762a05732b492e110f2e4e2e1b5ef2d85c848ccfb671ee20a47c8d1376276708dc30a90ff1121b647ba3b7259a6bc383b2034938ef0e275b58b920375ac605076178123693c6c4f1331661a62eba28c249386855637780e3ff5f23a6d854700eaa6803ef48907513b92")]
namespace NServiceBus.CustomChecks
{
    public class CheckResult
    {
        public static NServiceBus.CustomChecks.CheckResult Pass;
        public CheckResult() { }
        public string FailureReason { get; set; }
        public bool HasFailed { get; set; }
        public static NServiceBus.CustomChecks.CheckResult Failed(string reason) { }
        public static System.Threading.Tasks.Task<NServiceBus.CustomChecks.CheckResult> op_Implicit(NServiceBus.CustomChecks.CheckResult result) { }
    }
    public abstract class CustomCheck : NServiceBus.CustomChecks.ICustomCheck
    {
        protected CustomCheck(string id, string category, System.TimeSpan? repeatAfter = default) { }
        public string Category { get; }
        public string Id { get; }
        public System.TimeSpan? Interval { get; }
        public abstract System.Threading.Tasks.Task<NServiceBus.CustomChecks.CheckResult> PerformCheck(System.Threading.CancellationToken cancellationToken);
    }
    public interface ICustomCheck
    {
        string Category { get; }
        string Id { get; }
        System.TimeSpan? Interval { get; }
        System.Threading.Tasks.Task<NServiceBus.CustomChecks.CheckResult> PerformCheck(System.Threading.CancellationToken cancellationToken);
    }
}
namespace NServiceBus
{
    public static class CustomChecksConfigurationExtensions
    {
        public static void ReportCustomChecksTo(this NServiceBus.EndpointConfiguration config, string serviceControlQueue, System.TimeSpan? timeToLive = default) { }
    }
}